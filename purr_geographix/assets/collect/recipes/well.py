"""GeoGraphix well"""

from purr_geographix.assets.collect.xformer import PURR_DELIM, PURR_NULL, PURR_WHERE

selector = f"""
    WITH w AS (
        SELECT
            uwi                          AS w_uwi,
            abandonment_date             AS w_abandonment_date,
            assigned_field               AS w_assigned_field,
            base_node_id                 AS w_base_node_id,
            bottom_hole_latitude         AS w_bottom_hole_latitude,
            bottom_hole_longitude        AS w_bottom_hole_longitude,
            casing_flange_elev           AS w_casing_flange_elev,
            casing_flange_elev_ouom      AS w_casing_flange_elev_ouom,
            common_well_name             AS w_common_well_name,
            completion_date              AS w_completion_date,
            confidential_date            AS w_confidential_date,
            confidential_depth           AS w_confidential_depth,
            confidential_depth_ouom      AS w_confidential_depth_ouom,
            confidential_form            AS w_confidential_form,
            confidential_type            AS w_confidential_type,
            country                      AS w_country,
            county                       AS w_county,
            current_class                AS w_current_class,
            current_status               AS w_current_status,
            current_status_date          AS w_current_status_date,
            depth_datum                  AS w_depth_datum,
            depth_datum_elev             AS w_depth_datum_elev,
            depth_datum_elev_ouom        AS w_depth_datum_elev_ouom,
            discovery_ind                AS w_discovery_ind,
            district                     AS w_district,
            drill_td                     AS w_drill_td,
            drill_td_ouom                AS w_drill_td_ouom,
            faulted_ind                  AS w_faulted_ind,
            final_drill_date             AS w_final_drill_date,
            final_td                     AS w_final_td,
            final_td_ouom                AS w_final_td_ouom,
            geodetic_datum_id            AS w_geodetic_datum_id,
            geographic_region            AS w_geographic_region,
            geologic_province            AS w_geologic_province,
            ggx_internal_status          AS w_ggx_internal_status,
            ground_elev                  AS w_ground_elev,
            ground_elev_ouom             AS w_ground_elev_ouom,
            ground_elev_type             AS w_ground_elev_type,
            gx_alternate_id              AS w_gx_alternate_id,
            gx_bottom_hole_ew_direction  AS w_gx_bottom_hole_ew_direction,
            gx_bottom_hole_ns_direction  AS w_gx_bottom_hole_ns_direction,
            gx_bottom_hole_tvd           AS w_gx_bottom_hole_tvd,
            gx_bottom_hole_x_offset      AS w_gx_bottom_hole_x_offset,
            gx_bottom_hole_y_offset      AS w_gx_bottom_hole_y_offset,
            --gx_dev_well_blob             AS w_gx_dev_well_blob,
            gx_formid                    AS w_gx_formid,
            gx_formid_alias              AS w_gx_formid_alias,
            gx_legal_string              AS w_gx_legal_string,
            gx_location_string           AS w_gx_location_string,
            gx_mag_declination           AS w_gx_mag_declination,
            gx_old_id                    AS w_gx_old_id,
            gx_oldest_form_alias         AS w_gx_oldest_form_alias,
            gx_original_units            AS w_gx_original_units,
            gx_percent_allocation        AS w_gx_percent_allocation,
            gx_permit_date               AS w_gx_permit_date,
            gx_point                     AS w_gx_point,
            gx_proposed_flag             AS w_gx_proposed_flag,
            gx_remarks                   AS w_gx_remarks,
            gx_rigfloor_elev             AS w_gx_rigfloor_elev,
            gx_td_form_alias             AS w_gx_td_form_alias,
            gx_user_date                 AS w_gx_user_date,
            gx_user1                     AS w_gx_user1,
            gx_user2                     AS w_gx_user2,
            gx_wsn                       AS w_gx_wsn,
            initial_class                AS w_initial_class,
            kb_elev                      AS w_kb_elev,
            kb_elev_ouom                 AS w_kb_elev_ouom,
            lease_name                   AS w_lease_name,
            lease_number                 AS w_lease_number,
            legal_survey_type            AS w_legal_survey_type,
            log_td                       AS w_log_td,
            log_td_ouom                  AS w_log_td_ouom,
            max_tvd                      AS w_max_tvd,
            max_tvd_ouom                 AS w_max_tvd_ouom,
            net_pay                      AS w_net_pay,
            net_pay_ouom                 AS w_net_pay_ouom,
            oldest_form                  AS w_oldest_form,
            oldest_form_age              AS w_oldest_form_age,
            operator                     AS w_operator,
            original_operator            AS w_original_operator,
            parent_relationship_type     AS w_parent_relationship_type,
            parent_uwi                   AS w_parent_uwi,
            platform_id                  AS w_platform_id,
            platform_source              AS w_platform_source,
            plot_name                    AS w_plot_name,
            plot_symbol                  AS w_plot_symbol,
            plugback_depth               AS w_plugback_depth,
            plugback_depth_ouom          AS w_plugback_depth_ouom,
            primary_source               AS w_primary_source,
            profile_type                 AS w_profile_type,
            province_state               AS w_province_state,
            regulatory_agency            AS w_regulatory_agency,
            rig_release_date             AS w_rig_release_date,
            row_changed_date             AS w_row_changed_date,
            source_document              AS w_source_document,
            spud_date                    AS w_spud_date,
            surface_latitude             AS w_surface_latitude,
            surface_longitude            AS w_surface_longitude,
            surface_node_id              AS w_surface_node_id,
            tax_credit_code              AS w_tax_credit_code,
            td_form                      AS w_td_form,
            td_form_age                  AS w_td_form_age,
            water_depth                  AS w_water_depth,
            water_depth_datum            AS w_water_depth_datum,
            water_depth_ouom             AS w_water_depth_ouom,
            well_govt_id                 AS w_well_govt_id,
            well_intersect_md            AS w_well_intersect_md,
            well_name                    AS w_well_name,
            well_number                  AS w_well_number,
            whipstock_depth              AS w_whipstock_depth,
            whipstock_depth_ouom         AS w_whipstock_depth_ouom
        FROM well
    ),
    c AS (
        SELECT
            uwi                                AS id_c_uwi,
            LIST(IFNULL(location_type,         '{PURR_NULL}',  CAST(location_type AS VARCHAR)),         '{PURR_DELIM}' ORDER BY bh_flag) AS c_location_type,
            LIST(IFNULL(bh_flag,               '{PURR_NULL}',  CAST(bh_flag AS VARCHAR)),               '{PURR_DELIM}' ORDER BY bh_flag) AS c_bh_flag,
            LIST(IFNULL(source,                '{PURR_NULL}',  CAST(source AS VARCHAR)),                '{PURR_DELIM}' ORDER BY bh_flag) AS c_source,
            LIST(IFNULL(congress_range,        '{PURR_NULL}',  CAST(congress_range AS VARCHAR)),        '{PURR_DELIM}' ORDER BY bh_flag) AS c_congress_range,
            LIST(IFNULL(congress_sect_suffix,  '{PURR_NULL}',  CAST(congress_sect_suffix AS VARCHAR)),  '{PURR_DELIM}' ORDER BY bh_flag) AS c_congress_sect_suffix,
            LIST(IFNULL(ew_direction,          '{PURR_NULL}',  CAST(ew_direction AS VARCHAR)),          '{PURR_DELIM}' ORDER BY bh_flag) AS c_ew_direction,
            LIST(IFNULL(congress_section,      '{PURR_NULL}',  CAST(congress_section AS VARCHAR)),      '{PURR_DELIM}' ORDER BY bh_flag) AS c_congress_section,
            LIST(IFNULL(congress_sect_type,    '{PURR_NULL}',  CAST(congress_sect_type AS VARCHAR)),    '{PURR_DELIM}' ORDER BY bh_flag) AS c_congress_sect_type,
            LIST(IFNULL(congress_township,     '{PURR_NULL}',  CAST(congress_township AS VARCHAR)),     '{PURR_DELIM}' ORDER BY bh_flag) AS c_congress_township,
            LIST(IFNULL(ns_direction,          '{PURR_NULL}',  CAST(ns_direction AS VARCHAR)),          '{PURR_DELIM}' ORDER BY bh_flag) AS c_ns_direction,
            LIST(IFNULL(congress_twp_name,     '{PURR_NULL}',  CAST(congress_twp_name AS VARCHAR)),     '{PURR_DELIM}' ORDER BY bh_flag) AS c_congress_twp_name,
            LIST(IFNULL(principal_meridian,    '{PURR_NULL}',  CAST(principal_meridian AS VARCHAR)),    '{PURR_DELIM}' ORDER BY bh_flag) AS c_principal_meridian,
            LIST(IFNULL(ns_footage,            '{PURR_NULL}',  CAST(ns_footage AS VARCHAR)),            '{PURR_DELIM}' ORDER BY bh_flag) AS c_ns_footage,
            LIST(IFNULL(ns_start_line,         '{PURR_NULL}',  CAST(ns_start_line AS VARCHAR)),         '{PURR_DELIM}' ORDER BY bh_flag) AS c_ns_start_line,
            LIST(IFNULL(ew_footage,            '{PURR_NULL}',  CAST(ew_footage AS VARCHAR)),            '{PURR_DELIM}' ORDER BY bh_flag) AS c_ew_footage,
            LIST(IFNULL(ew_start_line,         '{PURR_NULL}',  CAST(ew_start_line AS VARCHAR)),         '{PURR_DELIM}' ORDER BY bh_flag) AS c_ew_start_line,
            LIST(IFNULL(footage_origin,        '{PURR_NULL}',  CAST(footage_origin AS VARCHAR)),        '{PURR_DELIM}' ORDER BY bh_flag) AS c_footage_origin,
            LIST(IFNULL(spot_code,             '{PURR_NULL}',  CAST(spot_code AS VARCHAR)),             '{PURR_DELIM}' ORDER BY bh_flag) AS c_spot_code,
            LIST(IFNULL(remark,                '{PURR_NULL}',  CAST(remark AS VARCHAR)),                '{PURR_DELIM}' ORDER BY bh_flag) AS c_remark,
            LIST(IFNULL(ns_footage_ouom,       '{PURR_NULL}',  CAST(ns_footage_ouom AS VARCHAR)),       '{PURR_DELIM}' ORDER BY bh_flag) AS c_ns_footage_ouom,
            LIST(IFNULL(ew_footage_ouom,       '{PURR_NULL}',  CAST(ew_footage_ouom AS VARCHAR)),       '{PURR_DELIM}' ORDER BY bh_flag) AS c_ew_footage_ouom,
            LIST(IFNULL(row_changed_date,      '{PURR_NULL}',  CAST(row_changed_date AS VARCHAR)),      '{PURR_DELIM}' ORDER BY bh_flag) AS c_row_changed_date,
            LIST(IFNULL(polygonid,             '{PURR_NULL}',  CAST(polygonid AS VARCHAR)),             '{PURR_DELIM}' ORDER BY bh_flag) AS c_polygonid,
            LIST(IFNULL(county,                '{PURR_NULL}',  CAST(county AS VARCHAR)),                '{PURR_DELIM}' ORDER BY bh_flag) AS c_county,
            LIST(IFNULL(country,               '{PURR_NULL}',  CAST(country AS VARCHAR)),               '{PURR_DELIM}' ORDER BY bh_flag) AS c_country,
            LIST(IFNULL(province_state,        '{PURR_NULL}',  CAST(province_state AS VARCHAR)),        '{PURR_DELIM}' ORDER BY bh_flag) AS c_province_state
        FROM legal_congress_loc
        GROUP BY uwi
    )
    SELECT
        w.*,
        c.*
    FROM w
    JOIN c ON
        c.id_c_uwi = w.w_uwi
    {PURR_WHERE}
    """

identifier = f"""
    SELECT
        uwi AS w_uwi
    FROM well w
    {PURR_WHERE}
    """

recipe = {
    "selector": selector,
    "identifier": identifier,
    "prefixes": {
        "w_": "well",
        "c_": "legal_congress_loc",
    },
    "xforms": {
        # "w_gx_dev_well_blob": "blob_to_hex",
    },
    "chunk_size": 1000,
}
